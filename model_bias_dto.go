/*
GroupBy Retail

GroupBy Retail API

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the BiasDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BiasDto{}

// BiasDto Biases the search results to either increase or decrease product relevancy for products that match the given field and content.
type BiasDto struct {
	// The field the bias refers to.
	Field string `json:"field"`
	// The content the field must match for the bias to be applied.
	Content NullableString `json:"content,omitempty"`
	Strength BiasDtoStrengthDto `json:"strength"`
}

// NewBiasDto instantiates a new BiasDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBiasDto(field string, strength BiasDtoStrengthDto) *BiasDto {
	this := BiasDto{}
	this.Field = field
	this.Strength = strength
	return &this
}

// NewBiasDtoWithDefaults instantiates a new BiasDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBiasDtoWithDefaults() *BiasDto {
	this := BiasDto{}
	return &this
}

// GetField returns the Field field value
func (o *BiasDto) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *BiasDto) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *BiasDto) SetField(v string) {
	o.Field = v
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BiasDto) GetContent() string {
	if o == nil || IsNil(o.Content.Get()) {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BiasDto) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *BiasDto) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *BiasDto) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *BiasDto) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *BiasDto) UnsetContent() {
	o.Content.Unset()
}

// GetStrength returns the Strength field value
func (o *BiasDto) GetStrength() BiasDtoStrengthDto {
	if o == nil {
		var ret BiasDtoStrengthDto
		return ret
	}

	return o.Strength
}

// GetStrengthOk returns a tuple with the Strength field value
// and a boolean to check if the value has been set.
func (o *BiasDto) GetStrengthOk() (*BiasDtoStrengthDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strength, true
}

// SetStrength sets field value
func (o *BiasDto) SetStrength(v BiasDtoStrengthDto) {
	o.Strength = v
}

func (o BiasDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BiasDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	toSerialize["strength"] = o.Strength
	return toSerialize, nil
}

type NullableBiasDto struct {
	value *BiasDto
	isSet bool
}

func (v NullableBiasDto) Get() *BiasDto {
	return v.value
}

func (v *NullableBiasDto) Set(val *BiasDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBiasDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBiasDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBiasDto(val *BiasDto) *NullableBiasDto {
	return &NullableBiasDto{value: val, isSet: true}
}

func (v NullableBiasDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBiasDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


