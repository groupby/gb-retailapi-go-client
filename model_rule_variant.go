/*
GroupBy Retail

GroupBy Retail API

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the RuleVariant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleVariant{}

// RuleVariant struct for RuleVariant
type RuleVariant struct {
	BiasingProfileName string `json:"biasingProfileName"`
	IncludedNavigations []string `json:"includedNavigations"`
	Template RuleTemplate `json:"template"`
	BoostedProductBuckets []BoostedProductBucket `json:"boostedProductBuckets"`
	PinnedRefinements []PinnedRefinement `json:"pinnedRefinements"`
	Sort Sort `json:"sort"`
	ValueFilters []ValueFilter `json:"valueFilters"`
	SearchFilters []SearchFilter `json:"searchFilters"`
	RangeFilters []RangeFilter `json:"rangeFilters"`
}

// NewRuleVariant instantiates a new RuleVariant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleVariant(biasingProfileName string, includedNavigations []string, template RuleTemplate, boostedProductBuckets []BoostedProductBucket, pinnedRefinements []PinnedRefinement, sort Sort, valueFilters []ValueFilter, searchFilters []SearchFilter, rangeFilters []RangeFilter) *RuleVariant {
	this := RuleVariant{}
	this.BiasingProfileName = biasingProfileName
	this.IncludedNavigations = includedNavigations
	this.Template = template
	this.BoostedProductBuckets = boostedProductBuckets
	this.PinnedRefinements = pinnedRefinements
	this.Sort = sort
	this.ValueFilters = valueFilters
	this.SearchFilters = searchFilters
	this.RangeFilters = rangeFilters
	return &this
}

// NewRuleVariantWithDefaults instantiates a new RuleVariant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleVariantWithDefaults() *RuleVariant {
	this := RuleVariant{}
	return &this
}

// GetBiasingProfileName returns the BiasingProfileName field value
func (o *RuleVariant) GetBiasingProfileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BiasingProfileName
}

// GetBiasingProfileNameOk returns a tuple with the BiasingProfileName field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetBiasingProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BiasingProfileName, true
}

// SetBiasingProfileName sets field value
func (o *RuleVariant) SetBiasingProfileName(v string) {
	o.BiasingProfileName = v
}

// GetIncludedNavigations returns the IncludedNavigations field value
func (o *RuleVariant) GetIncludedNavigations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IncludedNavigations
}

// GetIncludedNavigationsOk returns a tuple with the IncludedNavigations field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetIncludedNavigationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedNavigations, true
}

// SetIncludedNavigations sets field value
func (o *RuleVariant) SetIncludedNavigations(v []string) {
	o.IncludedNavigations = v
}

// GetTemplate returns the Template field value
func (o *RuleVariant) GetTemplate() RuleTemplate {
	if o == nil {
		var ret RuleTemplate
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetTemplateOk() (*RuleTemplate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *RuleVariant) SetTemplate(v RuleTemplate) {
	o.Template = v
}

// GetBoostedProductBuckets returns the BoostedProductBuckets field value
func (o *RuleVariant) GetBoostedProductBuckets() []BoostedProductBucket {
	if o == nil {
		var ret []BoostedProductBucket
		return ret
	}

	return o.BoostedProductBuckets
}

// GetBoostedProductBucketsOk returns a tuple with the BoostedProductBuckets field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetBoostedProductBucketsOk() ([]BoostedProductBucket, bool) {
	if o == nil {
		return nil, false
	}
	return o.BoostedProductBuckets, true
}

// SetBoostedProductBuckets sets field value
func (o *RuleVariant) SetBoostedProductBuckets(v []BoostedProductBucket) {
	o.BoostedProductBuckets = v
}

// GetPinnedRefinements returns the PinnedRefinements field value
func (o *RuleVariant) GetPinnedRefinements() []PinnedRefinement {
	if o == nil {
		var ret []PinnedRefinement
		return ret
	}

	return o.PinnedRefinements
}

// GetPinnedRefinementsOk returns a tuple with the PinnedRefinements field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetPinnedRefinementsOk() ([]PinnedRefinement, bool) {
	if o == nil {
		return nil, false
	}
	return o.PinnedRefinements, true
}

// SetPinnedRefinements sets field value
func (o *RuleVariant) SetPinnedRefinements(v []PinnedRefinement) {
	o.PinnedRefinements = v
}

// GetSort returns the Sort field value
func (o *RuleVariant) GetSort() Sort {
	if o == nil {
		var ret Sort
		return ret
	}

	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetSortOk() (*Sort, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sort, true
}

// SetSort sets field value
func (o *RuleVariant) SetSort(v Sort) {
	o.Sort = v
}

// GetValueFilters returns the ValueFilters field value
func (o *RuleVariant) GetValueFilters() []ValueFilter {
	if o == nil {
		var ret []ValueFilter
		return ret
	}

	return o.ValueFilters
}

// GetValueFiltersOk returns a tuple with the ValueFilters field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetValueFiltersOk() ([]ValueFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueFilters, true
}

// SetValueFilters sets field value
func (o *RuleVariant) SetValueFilters(v []ValueFilter) {
	o.ValueFilters = v
}

// GetSearchFilters returns the SearchFilters field value
func (o *RuleVariant) GetSearchFilters() []SearchFilter {
	if o == nil {
		var ret []SearchFilter
		return ret
	}

	return o.SearchFilters
}

// GetSearchFiltersOk returns a tuple with the SearchFilters field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetSearchFiltersOk() ([]SearchFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchFilters, true
}

// SetSearchFilters sets field value
func (o *RuleVariant) SetSearchFilters(v []SearchFilter) {
	o.SearchFilters = v
}

// GetRangeFilters returns the RangeFilters field value
func (o *RuleVariant) GetRangeFilters() []RangeFilter {
	if o == nil {
		var ret []RangeFilter
		return ret
	}

	return o.RangeFilters
}

// GetRangeFiltersOk returns a tuple with the RangeFilters field value
// and a boolean to check if the value has been set.
func (o *RuleVariant) GetRangeFiltersOk() ([]RangeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.RangeFilters, true
}

// SetRangeFilters sets field value
func (o *RuleVariant) SetRangeFilters(v []RangeFilter) {
	o.RangeFilters = v
}

func (o RuleVariant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleVariant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["biasingProfileName"] = o.BiasingProfileName
	toSerialize["includedNavigations"] = o.IncludedNavigations
	toSerialize["template"] = o.Template
	toSerialize["boostedProductBuckets"] = o.BoostedProductBuckets
	toSerialize["pinnedRefinements"] = o.PinnedRefinements
	toSerialize["sort"] = o.Sort
	toSerialize["valueFilters"] = o.ValueFilters
	toSerialize["searchFilters"] = o.SearchFilters
	toSerialize["rangeFilters"] = o.RangeFilters
	return toSerialize, nil
}

type NullableRuleVariant struct {
	value *RuleVariant
	isSet bool
}

func (v NullableRuleVariant) Get() *RuleVariant {
	return v.value
}

func (v *NullableRuleVariant) Set(val *RuleVariant) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleVariant) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleVariant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleVariant(val *RuleVariant) *NullableRuleVariant {
	return &NullableRuleVariant{value: val, isSet: true}
}

func (v NullableRuleVariant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleVariant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


