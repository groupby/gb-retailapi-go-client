/*
GroupBy Retail

GroupBy Retail API

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the RecommendationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecommendationsRequest{}

// RecommendationsRequest Object to wrap all recommendation request configs.
type RecommendationsRequest struct {
	Collection string `json:"collection"`
	VisitorId NullableString `json:"visitorId,omitempty"`
	Limit NullableString `json:"limit,omitempty"`
	PageSize NullableString `json:"pageSize,omitempty"`
	EventType NullableString `json:"eventType,omitempty"`
	LoginId NullableString `json:"loginId,omitempty"`
	ProductID []string `json:"productID,omitempty"`
	Fields []string `json:"fields,omitempty"`
	Filters []Filter `json:"filters,omitempty"`
	RawFilter NullableString `json:"rawFilter,omitempty"`
	Placement NullableString `json:"placement,omitempty"`
	Name NullableString `json:"name,omitempty"`
	// The default is true. If strictFiltering true only products that are within the scope of the filter specified. If false, relax the filtering so that the response may contain other products that are outside the scope of the filtering.
	StrictFiltering NullableBool `json:"strictFiltering,omitempty"`
}

// NewRecommendationsRequest instantiates a new RecommendationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendationsRequest(collection string) *RecommendationsRequest {
	this := RecommendationsRequest{}
	this.Collection = collection
	return &this
}

// NewRecommendationsRequestWithDefaults instantiates a new RecommendationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendationsRequestWithDefaults() *RecommendationsRequest {
	this := RecommendationsRequest{}
	return &this
}

// GetCollection returns the Collection field value
func (o *RecommendationsRequest) GetCollection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Collection
}

// GetCollectionOk returns a tuple with the Collection field value
// and a boolean to check if the value has been set.
func (o *RecommendationsRequest) GetCollectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Collection, true
}

// SetCollection sets field value
func (o *RecommendationsRequest) SetCollection(v string) {
	o.Collection = v
}

// GetVisitorId returns the VisitorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetVisitorId() string {
	if o == nil || IsNil(o.VisitorId.Get()) {
		var ret string
		return ret
	}
	return *o.VisitorId.Get()
}

// GetVisitorIdOk returns a tuple with the VisitorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetVisitorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VisitorId.Get(), o.VisitorId.IsSet()
}

// HasVisitorId returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasVisitorId() bool {
	if o != nil && o.VisitorId.IsSet() {
		return true
	}

	return false
}

// SetVisitorId gets a reference to the given NullableString and assigns it to the VisitorId field.
func (o *RecommendationsRequest) SetVisitorId(v string) {
	o.VisitorId.Set(&v)
}
// SetVisitorIdNil sets the value for VisitorId to be an explicit nil
func (o *RecommendationsRequest) SetVisitorIdNil() {
	o.VisitorId.Set(nil)
}

// UnsetVisitorId ensures that no value is present for VisitorId, not even an explicit nil
func (o *RecommendationsRequest) UnsetVisitorId() {
	o.VisitorId.Unset()
}

// GetLimit returns the Limit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetLimit() string {
	if o == nil || IsNil(o.Limit.Get()) {
		var ret string
		return ret
	}
	return *o.Limit.Get()
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetLimitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limit.Get(), o.Limit.IsSet()
}

// HasLimit returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasLimit() bool {
	if o != nil && o.Limit.IsSet() {
		return true
	}

	return false
}

// SetLimit gets a reference to the given NullableString and assigns it to the Limit field.
func (o *RecommendationsRequest) SetLimit(v string) {
	o.Limit.Set(&v)
}
// SetLimitNil sets the value for Limit to be an explicit nil
func (o *RecommendationsRequest) SetLimitNil() {
	o.Limit.Set(nil)
}

// UnsetLimit ensures that no value is present for Limit, not even an explicit nil
func (o *RecommendationsRequest) UnsetLimit() {
	o.Limit.Unset()
}

// GetPageSize returns the PageSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetPageSize() string {
	if o == nil || IsNil(o.PageSize.Get()) {
		var ret string
		return ret
	}
	return *o.PageSize.Get()
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetPageSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PageSize.Get(), o.PageSize.IsSet()
}

// HasPageSize returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasPageSize() bool {
	if o != nil && o.PageSize.IsSet() {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given NullableString and assigns it to the PageSize field.
func (o *RecommendationsRequest) SetPageSize(v string) {
	o.PageSize.Set(&v)
}
// SetPageSizeNil sets the value for PageSize to be an explicit nil
func (o *RecommendationsRequest) SetPageSizeNil() {
	o.PageSize.Set(nil)
}

// UnsetPageSize ensures that no value is present for PageSize, not even an explicit nil
func (o *RecommendationsRequest) UnsetPageSize() {
	o.PageSize.Unset()
}

// GetEventType returns the EventType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetEventType() string {
	if o == nil || IsNil(o.EventType.Get()) {
		var ret string
		return ret
	}
	return *o.EventType.Get()
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventType.Get(), o.EventType.IsSet()
}

// HasEventType returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasEventType() bool {
	if o != nil && o.EventType.IsSet() {
		return true
	}

	return false
}

// SetEventType gets a reference to the given NullableString and assigns it to the EventType field.
func (o *RecommendationsRequest) SetEventType(v string) {
	o.EventType.Set(&v)
}
// SetEventTypeNil sets the value for EventType to be an explicit nil
func (o *RecommendationsRequest) SetEventTypeNil() {
	o.EventType.Set(nil)
}

// UnsetEventType ensures that no value is present for EventType, not even an explicit nil
func (o *RecommendationsRequest) UnsetEventType() {
	o.EventType.Unset()
}

// GetLoginId returns the LoginId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetLoginId() string {
	if o == nil || IsNil(o.LoginId.Get()) {
		var ret string
		return ret
	}
	return *o.LoginId.Get()
}

// GetLoginIdOk returns a tuple with the LoginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetLoginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LoginId.Get(), o.LoginId.IsSet()
}

// HasLoginId returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasLoginId() bool {
	if o != nil && o.LoginId.IsSet() {
		return true
	}

	return false
}

// SetLoginId gets a reference to the given NullableString and assigns it to the LoginId field.
func (o *RecommendationsRequest) SetLoginId(v string) {
	o.LoginId.Set(&v)
}
// SetLoginIdNil sets the value for LoginId to be an explicit nil
func (o *RecommendationsRequest) SetLoginIdNil() {
	o.LoginId.Set(nil)
}

// UnsetLoginId ensures that no value is present for LoginId, not even an explicit nil
func (o *RecommendationsRequest) UnsetLoginId() {
	o.LoginId.Unset()
}

// GetProductID returns the ProductID field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetProductID() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetProductIDOk() ([]string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasProductID() bool {
	if o != nil && IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given []string and assigns it to the ProductID field.
func (o *RecommendationsRequest) SetProductID(v []string) {
	o.ProductID = v
}

// GetFields returns the Fields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetFields() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasFields() bool {
	if o != nil && IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []string and assigns it to the Fields field.
func (o *RecommendationsRequest) SetFields(v []string) {
	o.Fields = v
}

// GetFilters returns the Filters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetFilters() []Filter {
	if o == nil {
		var ret []Filter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetFiltersOk() ([]Filter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasFilters() bool {
	if o != nil && IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []Filter and assigns it to the Filters field.
func (o *RecommendationsRequest) SetFilters(v []Filter) {
	o.Filters = v
}

// GetRawFilter returns the RawFilter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetRawFilter() string {
	if o == nil || IsNil(o.RawFilter.Get()) {
		var ret string
		return ret
	}
	return *o.RawFilter.Get()
}

// GetRawFilterOk returns a tuple with the RawFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetRawFilterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RawFilter.Get(), o.RawFilter.IsSet()
}

// HasRawFilter returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasRawFilter() bool {
	if o != nil && o.RawFilter.IsSet() {
		return true
	}

	return false
}

// SetRawFilter gets a reference to the given NullableString and assigns it to the RawFilter field.
func (o *RecommendationsRequest) SetRawFilter(v string) {
	o.RawFilter.Set(&v)
}
// SetRawFilterNil sets the value for RawFilter to be an explicit nil
func (o *RecommendationsRequest) SetRawFilterNil() {
	o.RawFilter.Set(nil)
}

// UnsetRawFilter ensures that no value is present for RawFilter, not even an explicit nil
func (o *RecommendationsRequest) UnsetRawFilter() {
	o.RawFilter.Unset()
}

// GetPlacement returns the Placement field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetPlacement() string {
	if o == nil || IsNil(o.Placement.Get()) {
		var ret string
		return ret
	}
	return *o.Placement.Get()
}

// GetPlacementOk returns a tuple with the Placement field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetPlacementOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Placement.Get(), o.Placement.IsSet()
}

// HasPlacement returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasPlacement() bool {
	if o != nil && o.Placement.IsSet() {
		return true
	}

	return false
}

// SetPlacement gets a reference to the given NullableString and assigns it to the Placement field.
func (o *RecommendationsRequest) SetPlacement(v string) {
	o.Placement.Set(&v)
}
// SetPlacementNil sets the value for Placement to be an explicit nil
func (o *RecommendationsRequest) SetPlacementNil() {
	o.Placement.Set(nil)
}

// UnsetPlacement ensures that no value is present for Placement, not even an explicit nil
func (o *RecommendationsRequest) UnsetPlacement() {
	o.Placement.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RecommendationsRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *RecommendationsRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RecommendationsRequest) UnsetName() {
	o.Name.Unset()
}

// GetStrictFiltering returns the StrictFiltering field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RecommendationsRequest) GetStrictFiltering() bool {
	if o == nil || IsNil(o.StrictFiltering.Get()) {
		var ret bool
		return ret
	}
	return *o.StrictFiltering.Get()
}

// GetStrictFilteringOk returns a tuple with the StrictFiltering field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RecommendationsRequest) GetStrictFilteringOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.StrictFiltering.Get(), o.StrictFiltering.IsSet()
}

// HasStrictFiltering returns a boolean if a field has been set.
func (o *RecommendationsRequest) HasStrictFiltering() bool {
	if o != nil && o.StrictFiltering.IsSet() {
		return true
	}

	return false
}

// SetStrictFiltering gets a reference to the given NullableBool and assigns it to the StrictFiltering field.
func (o *RecommendationsRequest) SetStrictFiltering(v bool) {
	o.StrictFiltering.Set(&v)
}
// SetStrictFilteringNil sets the value for StrictFiltering to be an explicit nil
func (o *RecommendationsRequest) SetStrictFilteringNil() {
	o.StrictFiltering.Set(nil)
}

// UnsetStrictFiltering ensures that no value is present for StrictFiltering, not even an explicit nil
func (o *RecommendationsRequest) UnsetStrictFiltering() {
	o.StrictFiltering.Unset()
}

func (o RecommendationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecommendationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["collection"] = o.Collection
	if o.VisitorId.IsSet() {
		toSerialize["visitorId"] = o.VisitorId.Get()
	}
	if o.Limit.IsSet() {
		toSerialize["limit"] = o.Limit.Get()
	}
	if o.PageSize.IsSet() {
		toSerialize["pageSize"] = o.PageSize.Get()
	}
	if o.EventType.IsSet() {
		toSerialize["eventType"] = o.EventType.Get()
	}
	if o.LoginId.IsSet() {
		toSerialize["loginId"] = o.LoginId.Get()
	}
	if o.ProductID != nil {
		toSerialize["productID"] = o.ProductID
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.RawFilter.IsSet() {
		toSerialize["rawFilter"] = o.RawFilter.Get()
	}
	if o.Placement.IsSet() {
		toSerialize["placement"] = o.Placement.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.StrictFiltering.IsSet() {
		toSerialize["strictFiltering"] = o.StrictFiltering.Get()
	}
	return toSerialize, nil
}

type NullableRecommendationsRequest struct {
	value *RecommendationsRequest
	isSet bool
}

func (v NullableRecommendationsRequest) Get() *RecommendationsRequest {
	return v.value
}

func (v *NullableRecommendationsRequest) Set(val *RecommendationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendationsRequest(val *RecommendationsRequest) *NullableRecommendationsRequest {
	return &NullableRecommendationsRequest{value: val, isSet: true}
}

func (v NullableRecommendationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


