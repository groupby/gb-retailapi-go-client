/*
GroupBy Retail

GroupBy Retail API

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the RuleConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleConfiguration{}

// RuleConfiguration struct for RuleConfiguration
type RuleConfiguration struct {
	RuleInExperiment *bool `json:"ruleInExperiment,omitempty"`
	Id int32 `json:"id"`
	Name string `json:"name"`
	AreaId int32 `json:"areaId"`
	Priority int32 `json:"priority"`
	Enabled bool `json:"enabled"`
	ActiveHoursEnabled bool `json:"activeHoursEnabled"`
	ActiveFrom int64 `json:"activeFrom"`
	ActiveTo int64 `json:"activeTo"`
	TriggerSets []TriggerSet `json:"triggerSets"`
	BiasingProfileName string `json:"biasingProfileName"`
	Sort Sort `json:"sort"`
	IncludedNavigations []string `json:"includedNavigations"`
	ValueFilters []ValueFilter `json:"valueFilters"`
	SearchFilters []SearchFilter `json:"searchFilters"`
	RangeFilters []RangeFilter `json:"rangeFilters"`
	Template RuleTemplate `json:"template"`
	BoostedProductBuckets []BoostedProductBucket `json:"boostedProductBuckets"`
	PinnedRefinements []PinnedRefinement `json:"pinnedRefinements"`
	MessageType MessageType `json:"messageType"`
	Type RuleType `json:"type"`
	Variants []ExperimentVariant `json:"variants"`
}

// NewRuleConfiguration instantiates a new RuleConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleConfiguration(id int32, name string, areaId int32, priority int32, enabled bool, activeHoursEnabled bool, activeFrom int64, activeTo int64, triggerSets []TriggerSet, biasingProfileName string, sort Sort, includedNavigations []string, valueFilters []ValueFilter, searchFilters []SearchFilter, rangeFilters []RangeFilter, template RuleTemplate, boostedProductBuckets []BoostedProductBucket, pinnedRefinements []PinnedRefinement, messageType MessageType, type_ RuleType, variants []ExperimentVariant) *RuleConfiguration {
	this := RuleConfiguration{}
	this.Id = id
	this.Name = name
	this.AreaId = areaId
	this.Priority = priority
	this.Enabled = enabled
	this.ActiveHoursEnabled = activeHoursEnabled
	this.ActiveFrom = activeFrom
	this.ActiveTo = activeTo
	this.TriggerSets = triggerSets
	this.BiasingProfileName = biasingProfileName
	this.Sort = sort
	this.IncludedNavigations = includedNavigations
	this.ValueFilters = valueFilters
	this.SearchFilters = searchFilters
	this.RangeFilters = rangeFilters
	this.Template = template
	this.BoostedProductBuckets = boostedProductBuckets
	this.PinnedRefinements = pinnedRefinements
	this.MessageType = messageType
	this.Type = type_
	this.Variants = variants
	return &this
}

// NewRuleConfigurationWithDefaults instantiates a new RuleConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleConfigurationWithDefaults() *RuleConfiguration {
	this := RuleConfiguration{}
	return &this
}

// GetRuleInExperiment returns the RuleInExperiment field value if set, zero value otherwise.
func (o *RuleConfiguration) GetRuleInExperiment() bool {
	if o == nil || IsNil(o.RuleInExperiment) {
		var ret bool
		return ret
	}
	return *o.RuleInExperiment
}

// GetRuleInExperimentOk returns a tuple with the RuleInExperiment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetRuleInExperimentOk() (*bool, bool) {
	if o == nil || IsNil(o.RuleInExperiment) {
		return nil, false
	}
	return o.RuleInExperiment, true
}

// HasRuleInExperiment returns a boolean if a field has been set.
func (o *RuleConfiguration) HasRuleInExperiment() bool {
	if o != nil && !IsNil(o.RuleInExperiment) {
		return true
	}

	return false
}

// SetRuleInExperiment gets a reference to the given bool and assigns it to the RuleInExperiment field.
func (o *RuleConfiguration) SetRuleInExperiment(v bool) {
	o.RuleInExperiment = &v
}

// GetId returns the Id field value
func (o *RuleConfiguration) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RuleConfiguration) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RuleConfiguration) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RuleConfiguration) SetName(v string) {
	o.Name = v
}

// GetAreaId returns the AreaId field value
func (o *RuleConfiguration) GetAreaId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AreaId
}

// GetAreaIdOk returns a tuple with the AreaId field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetAreaIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AreaId, true
}

// SetAreaId sets field value
func (o *RuleConfiguration) SetAreaId(v int32) {
	o.AreaId = v
}

// GetPriority returns the Priority field value
func (o *RuleConfiguration) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *RuleConfiguration) SetPriority(v int32) {
	o.Priority = v
}

// GetEnabled returns the Enabled field value
func (o *RuleConfiguration) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RuleConfiguration) SetEnabled(v bool) {
	o.Enabled = v
}

// GetActiveHoursEnabled returns the ActiveHoursEnabled field value
func (o *RuleConfiguration) GetActiveHoursEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ActiveHoursEnabled
}

// GetActiveHoursEnabledOk returns a tuple with the ActiveHoursEnabled field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetActiveHoursEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveHoursEnabled, true
}

// SetActiveHoursEnabled sets field value
func (o *RuleConfiguration) SetActiveHoursEnabled(v bool) {
	o.ActiveHoursEnabled = v
}

// GetActiveFrom returns the ActiveFrom field value
func (o *RuleConfiguration) GetActiveFrom() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ActiveFrom
}

// GetActiveFromOk returns a tuple with the ActiveFrom field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetActiveFromOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveFrom, true
}

// SetActiveFrom sets field value
func (o *RuleConfiguration) SetActiveFrom(v int64) {
	o.ActiveFrom = v
}

// GetActiveTo returns the ActiveTo field value
func (o *RuleConfiguration) GetActiveTo() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ActiveTo
}

// GetActiveToOk returns a tuple with the ActiveTo field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetActiveToOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveTo, true
}

// SetActiveTo sets field value
func (o *RuleConfiguration) SetActiveTo(v int64) {
	o.ActiveTo = v
}

// GetTriggerSets returns the TriggerSets field value
func (o *RuleConfiguration) GetTriggerSets() []TriggerSet {
	if o == nil {
		var ret []TriggerSet
		return ret
	}

	return o.TriggerSets
}

// GetTriggerSetsOk returns a tuple with the TriggerSets field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetTriggerSetsOk() ([]TriggerSet, bool) {
	if o == nil {
		return nil, false
	}
	return o.TriggerSets, true
}

// SetTriggerSets sets field value
func (o *RuleConfiguration) SetTriggerSets(v []TriggerSet) {
	o.TriggerSets = v
}

// GetBiasingProfileName returns the BiasingProfileName field value
func (o *RuleConfiguration) GetBiasingProfileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BiasingProfileName
}

// GetBiasingProfileNameOk returns a tuple with the BiasingProfileName field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetBiasingProfileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BiasingProfileName, true
}

// SetBiasingProfileName sets field value
func (o *RuleConfiguration) SetBiasingProfileName(v string) {
	o.BiasingProfileName = v
}

// GetSort returns the Sort field value
func (o *RuleConfiguration) GetSort() Sort {
	if o == nil {
		var ret Sort
		return ret
	}

	return o.Sort
}

// GetSortOk returns a tuple with the Sort field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetSortOk() (*Sort, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sort, true
}

// SetSort sets field value
func (o *RuleConfiguration) SetSort(v Sort) {
	o.Sort = v
}

// GetIncludedNavigations returns the IncludedNavigations field value
func (o *RuleConfiguration) GetIncludedNavigations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IncludedNavigations
}

// GetIncludedNavigationsOk returns a tuple with the IncludedNavigations field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetIncludedNavigationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludedNavigations, true
}

// SetIncludedNavigations sets field value
func (o *RuleConfiguration) SetIncludedNavigations(v []string) {
	o.IncludedNavigations = v
}

// GetValueFilters returns the ValueFilters field value
func (o *RuleConfiguration) GetValueFilters() []ValueFilter {
	if o == nil {
		var ret []ValueFilter
		return ret
	}

	return o.ValueFilters
}

// GetValueFiltersOk returns a tuple with the ValueFilters field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetValueFiltersOk() ([]ValueFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueFilters, true
}

// SetValueFilters sets field value
func (o *RuleConfiguration) SetValueFilters(v []ValueFilter) {
	o.ValueFilters = v
}

// GetSearchFilters returns the SearchFilters field value
func (o *RuleConfiguration) GetSearchFilters() []SearchFilter {
	if o == nil {
		var ret []SearchFilter
		return ret
	}

	return o.SearchFilters
}

// GetSearchFiltersOk returns a tuple with the SearchFilters field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetSearchFiltersOk() ([]SearchFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchFilters, true
}

// SetSearchFilters sets field value
func (o *RuleConfiguration) SetSearchFilters(v []SearchFilter) {
	o.SearchFilters = v
}

// GetRangeFilters returns the RangeFilters field value
func (o *RuleConfiguration) GetRangeFilters() []RangeFilter {
	if o == nil {
		var ret []RangeFilter
		return ret
	}

	return o.RangeFilters
}

// GetRangeFiltersOk returns a tuple with the RangeFilters field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetRangeFiltersOk() ([]RangeFilter, bool) {
	if o == nil {
		return nil, false
	}
	return o.RangeFilters, true
}

// SetRangeFilters sets field value
func (o *RuleConfiguration) SetRangeFilters(v []RangeFilter) {
	o.RangeFilters = v
}

// GetTemplate returns the Template field value
func (o *RuleConfiguration) GetTemplate() RuleTemplate {
	if o == nil {
		var ret RuleTemplate
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetTemplateOk() (*RuleTemplate, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *RuleConfiguration) SetTemplate(v RuleTemplate) {
	o.Template = v
}

// GetBoostedProductBuckets returns the BoostedProductBuckets field value
// If the value is explicit nil, the zero value for []BoostedProductBucket will be returned
func (o *RuleConfiguration) GetBoostedProductBuckets() []BoostedProductBucket {
	if o == nil {
		var ret []BoostedProductBucket
		return ret
	}

	return o.BoostedProductBuckets
}

// GetBoostedProductBucketsOk returns a tuple with the BoostedProductBuckets field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RuleConfiguration) GetBoostedProductBucketsOk() ([]BoostedProductBucket, bool) {
	if o == nil || IsNil(o.BoostedProductBuckets) {
		return nil, false
	}
	return o.BoostedProductBuckets, true
}

// SetBoostedProductBuckets sets field value
func (o *RuleConfiguration) SetBoostedProductBuckets(v []BoostedProductBucket) {
	o.BoostedProductBuckets = v
}

// GetPinnedRefinements returns the PinnedRefinements field value
func (o *RuleConfiguration) GetPinnedRefinements() []PinnedRefinement {
	if o == nil {
		var ret []PinnedRefinement
		return ret
	}

	return o.PinnedRefinements
}

// GetPinnedRefinementsOk returns a tuple with the PinnedRefinements field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetPinnedRefinementsOk() ([]PinnedRefinement, bool) {
	if o == nil {
		return nil, false
	}
	return o.PinnedRefinements, true
}

// SetPinnedRefinements sets field value
func (o *RuleConfiguration) SetPinnedRefinements(v []PinnedRefinement) {
	o.PinnedRefinements = v
}

// GetMessageType returns the MessageType field value
func (o *RuleConfiguration) GetMessageType() MessageType {
	if o == nil {
		var ret MessageType
		return ret
	}

	return o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetMessageTypeOk() (*MessageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageType, true
}

// SetMessageType sets field value
func (o *RuleConfiguration) SetMessageType(v MessageType) {
	o.MessageType = v
}

// GetType returns the Type field value
func (o *RuleConfiguration) GetType() RuleType {
	if o == nil {
		var ret RuleType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetTypeOk() (*RuleType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RuleConfiguration) SetType(v RuleType) {
	o.Type = v
}

// GetVariants returns the Variants field value
func (o *RuleConfiguration) GetVariants() []ExperimentVariant {
	if o == nil {
		var ret []ExperimentVariant
		return ret
	}

	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value
// and a boolean to check if the value has been set.
func (o *RuleConfiguration) GetVariantsOk() ([]ExperimentVariant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variants, true
}

// SetVariants sets field value
func (o *RuleConfiguration) SetVariants(v []ExperimentVariant) {
	o.Variants = v
}

func (o RuleConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleInExperiment) {
		toSerialize["ruleInExperiment"] = o.RuleInExperiment
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["areaId"] = o.AreaId
	toSerialize["priority"] = o.Priority
	toSerialize["enabled"] = o.Enabled
	toSerialize["activeHoursEnabled"] = o.ActiveHoursEnabled
	toSerialize["activeFrom"] = o.ActiveFrom
	toSerialize["activeTo"] = o.ActiveTo
	toSerialize["triggerSets"] = o.TriggerSets
	toSerialize["biasingProfileName"] = o.BiasingProfileName
	toSerialize["sort"] = o.Sort
	toSerialize["includedNavigations"] = o.IncludedNavigations
	toSerialize["valueFilters"] = o.ValueFilters
	toSerialize["searchFilters"] = o.SearchFilters
	toSerialize["rangeFilters"] = o.RangeFilters
	toSerialize["template"] = o.Template
	if o.BoostedProductBuckets != nil {
		toSerialize["boostedProductBuckets"] = o.BoostedProductBuckets
	}
	toSerialize["pinnedRefinements"] = o.PinnedRefinements
	toSerialize["messageType"] = o.MessageType
	toSerialize["type"] = o.Type
	toSerialize["variants"] = o.Variants
	return toSerialize, nil
}

type NullableRuleConfiguration struct {
	value *RuleConfiguration
	isSet bool
}

func (v NullableRuleConfiguration) Get() *RuleConfiguration {
	return v.value
}

func (v *NullableRuleConfiguration) Set(val *RuleConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleConfiguration(val *RuleConfiguration) *NullableRuleConfiguration {
	return &NullableRuleConfiguration{value: val, isSet: true}
}

func (v NullableRuleConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


