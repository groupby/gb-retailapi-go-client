/*
GroupBy Retail

GroupBy Retail API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the Refinement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Refinement{}

// Refinement struct for Refinement
type Refinement struct {
	Value string `json:"value"`
	Priority int32 `json:"priority"`
}

// NewRefinement instantiates a new Refinement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefinement(value string, priority int32) *Refinement {
	this := Refinement{}
	this.Value = value
	this.Priority = priority
	return &this
}

// NewRefinementWithDefaults instantiates a new Refinement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefinementWithDefaults() *Refinement {
	this := Refinement{}
	return &this
}

// GetValue returns the Value field value
func (o *Refinement) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *Refinement) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *Refinement) SetValue(v string) {
	o.Value = v
}

// GetPriority returns the Priority field value
func (o *Refinement) GetPriority() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *Refinement) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *Refinement) SetPriority(v int32) {
	o.Priority = v
}

func (o Refinement) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Refinement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["value"] = o.Value
	toSerialize["priority"] = o.Priority
	return toSerialize, nil
}

type NullableRefinement struct {
	value *Refinement
	isSet bool
}

func (v NullableRefinement) Get() *Refinement {
	return v.value
}

func (v *NullableRefinement) Set(val *Refinement) {
	v.value = val
	v.isSet = true
}

func (v NullableRefinement) IsSet() bool {
	return v.isSet
}

func (v *NullableRefinement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefinement(val *Refinement) *NullableRefinement {
	return &NullableRefinement{value: val, isSet: true}
}

func (v NullableRefinement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefinement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


