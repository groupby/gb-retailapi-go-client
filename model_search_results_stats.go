/*
GroupBy Retail

GroupBy Retail API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the SearchResultsStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchResultsStats{}

// SearchResultsStats struct for SearchResultsStats
type SearchResultsStats struct {
	// Count of suggested sentences in response.
	SearchCount *int32 `json:"searchCount,omitempty"`
	// Time in milliseconds taken by autocomplete service to handle request and send response.
	AutocompleteResponse *int64 `json:"autocompleteResponse,omitempty"`
	// Count of extended attributes in autocomplete response.
	ExtendedAttributesCount *int32 `json:"extendedAttributesCount,omitempty"`
	// Time in milliseconds taken by application to enrich response with extended attributes.
	ExtendedAttributesResponse *int64 `json:"extendedAttributesResponse,omitempty"`
}

// NewSearchResultsStats instantiates a new SearchResultsStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResultsStats() *SearchResultsStats {
	this := SearchResultsStats{}
	return &this
}

// NewSearchResultsStatsWithDefaults instantiates a new SearchResultsStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResultsStatsWithDefaults() *SearchResultsStats {
	this := SearchResultsStats{}
	return &this
}

// GetSearchCount returns the SearchCount field value if set, zero value otherwise.
func (o *SearchResultsStats) GetSearchCount() int32 {
	if o == nil || IsNil(o.SearchCount) {
		var ret int32
		return ret
	}
	return *o.SearchCount
}

// GetSearchCountOk returns a tuple with the SearchCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultsStats) GetSearchCountOk() (*int32, bool) {
	if o == nil || IsNil(o.SearchCount) {
		return nil, false
	}
	return o.SearchCount, true
}

// HasSearchCount returns a boolean if a field has been set.
func (o *SearchResultsStats) HasSearchCount() bool {
	if o != nil && !IsNil(o.SearchCount) {
		return true
	}

	return false
}

// SetSearchCount gets a reference to the given int32 and assigns it to the SearchCount field.
func (o *SearchResultsStats) SetSearchCount(v int32) {
	o.SearchCount = &v
}

// GetAutocompleteResponse returns the AutocompleteResponse field value if set, zero value otherwise.
func (o *SearchResultsStats) GetAutocompleteResponse() int64 {
	if o == nil || IsNil(o.AutocompleteResponse) {
		var ret int64
		return ret
	}
	return *o.AutocompleteResponse
}

// GetAutocompleteResponseOk returns a tuple with the AutocompleteResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultsStats) GetAutocompleteResponseOk() (*int64, bool) {
	if o == nil || IsNil(o.AutocompleteResponse) {
		return nil, false
	}
	return o.AutocompleteResponse, true
}

// HasAutocompleteResponse returns a boolean if a field has been set.
func (o *SearchResultsStats) HasAutocompleteResponse() bool {
	if o != nil && !IsNil(o.AutocompleteResponse) {
		return true
	}

	return false
}

// SetAutocompleteResponse gets a reference to the given int64 and assigns it to the AutocompleteResponse field.
func (o *SearchResultsStats) SetAutocompleteResponse(v int64) {
	o.AutocompleteResponse = &v
}

// GetExtendedAttributesCount returns the ExtendedAttributesCount field value if set, zero value otherwise.
func (o *SearchResultsStats) GetExtendedAttributesCount() int32 {
	if o == nil || IsNil(o.ExtendedAttributesCount) {
		var ret int32
		return ret
	}
	return *o.ExtendedAttributesCount
}

// GetExtendedAttributesCountOk returns a tuple with the ExtendedAttributesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultsStats) GetExtendedAttributesCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtendedAttributesCount) {
		return nil, false
	}
	return o.ExtendedAttributesCount, true
}

// HasExtendedAttributesCount returns a boolean if a field has been set.
func (o *SearchResultsStats) HasExtendedAttributesCount() bool {
	if o != nil && !IsNil(o.ExtendedAttributesCount) {
		return true
	}

	return false
}

// SetExtendedAttributesCount gets a reference to the given int32 and assigns it to the ExtendedAttributesCount field.
func (o *SearchResultsStats) SetExtendedAttributesCount(v int32) {
	o.ExtendedAttributesCount = &v
}

// GetExtendedAttributesResponse returns the ExtendedAttributesResponse field value if set, zero value otherwise.
func (o *SearchResultsStats) GetExtendedAttributesResponse() int64 {
	if o == nil || IsNil(o.ExtendedAttributesResponse) {
		var ret int64
		return ret
	}
	return *o.ExtendedAttributesResponse
}

// GetExtendedAttributesResponseOk returns a tuple with the ExtendedAttributesResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultsStats) GetExtendedAttributesResponseOk() (*int64, bool) {
	if o == nil || IsNil(o.ExtendedAttributesResponse) {
		return nil, false
	}
	return o.ExtendedAttributesResponse, true
}

// HasExtendedAttributesResponse returns a boolean if a field has been set.
func (o *SearchResultsStats) HasExtendedAttributesResponse() bool {
	if o != nil && !IsNil(o.ExtendedAttributesResponse) {
		return true
	}

	return false
}

// SetExtendedAttributesResponse gets a reference to the given int64 and assigns it to the ExtendedAttributesResponse field.
func (o *SearchResultsStats) SetExtendedAttributesResponse(v int64) {
	o.ExtendedAttributesResponse = &v
}

func (o SearchResultsStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchResultsStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SearchCount) {
		toSerialize["searchCount"] = o.SearchCount
	}
	if !IsNil(o.AutocompleteResponse) {
		toSerialize["autocompleteResponse"] = o.AutocompleteResponse
	}
	if !IsNil(o.ExtendedAttributesCount) {
		toSerialize["extendedAttributesCount"] = o.ExtendedAttributesCount
	}
	if !IsNil(o.ExtendedAttributesResponse) {
		toSerialize["extendedAttributesResponse"] = o.ExtendedAttributesResponse
	}
	return toSerialize, nil
}

type NullableSearchResultsStats struct {
	value *SearchResultsStats
	isSet bool
}

func (v NullableSearchResultsStats) Get() *SearchResultsStats {
	return v.value
}

func (v *NullableSearchResultsStats) Set(val *SearchResultsStats) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResultsStats) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResultsStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResultsStats(val *SearchResultsStats) *NullableSearchResultsStats {
	return &NullableSearchResultsStats{value: val, isSet: true}
}

func (v NullableSearchResultsStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResultsStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


