/*
GroupBy Retail

GroupBy Retail API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the SearchRequestDtoOverwrites type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchRequestDtoOverwrites{}

// SearchRequestDtoOverwrites struct for SearchRequestDtoOverwrites
type SearchRequestDtoOverwrites struct {
	Rules []RuleConfiguration `json:"rules"`
}

// NewSearchRequestDtoOverwrites instantiates a new SearchRequestDtoOverwrites object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchRequestDtoOverwrites(rules []RuleConfiguration) *SearchRequestDtoOverwrites {
	this := SearchRequestDtoOverwrites{}
	this.Rules = rules
	return &this
}

// NewSearchRequestDtoOverwritesWithDefaults instantiates a new SearchRequestDtoOverwrites object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchRequestDtoOverwritesWithDefaults() *SearchRequestDtoOverwrites {
	this := SearchRequestDtoOverwrites{}
	return &this
}

// GetRules returns the Rules field value
func (o *SearchRequestDtoOverwrites) GetRules() []RuleConfiguration {
	if o == nil {
		var ret []RuleConfiguration
		return ret
	}

	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value
// and a boolean to check if the value has been set.
func (o *SearchRequestDtoOverwrites) GetRulesOk() ([]RuleConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rules, true
}

// SetRules sets field value
func (o *SearchRequestDtoOverwrites) SetRules(v []RuleConfiguration) {
	o.Rules = v
}

func (o SearchRequestDtoOverwrites) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchRequestDtoOverwrites) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rules"] = o.Rules
	return toSerialize, nil
}

type NullableSearchRequestDtoOverwrites struct {
	value *SearchRequestDtoOverwrites
	isSet bool
}

func (v NullableSearchRequestDtoOverwrites) Get() *SearchRequestDtoOverwrites {
	return v.value
}

func (v *NullableSearchRequestDtoOverwrites) Set(val *SearchRequestDtoOverwrites) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchRequestDtoOverwrites) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchRequestDtoOverwrites) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchRequestDtoOverwrites(val *SearchRequestDtoOverwrites) *NullableSearchRequestDtoOverwrites {
	return &NullableSearchRequestDtoOverwrites{value: val, isSet: true}
}

func (v NullableSearchRequestDtoOverwrites) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchRequestDtoOverwrites) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


