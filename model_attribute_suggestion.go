/*
GroupBy Retail

GroupBy Retail API

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the AttributeSuggestion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttributeSuggestion{}

// AttributeSuggestion Object with one single attribute and associated properties.
type AttributeSuggestion struct {
	// Suggestion itself.
	Suggestions []string `json:"suggestions,omitempty"`
}

// NewAttributeSuggestion instantiates a new AttributeSuggestion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeSuggestion() *AttributeSuggestion {
	this := AttributeSuggestion{}
	return &this
}

// NewAttributeSuggestionWithDefaults instantiates a new AttributeSuggestion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeSuggestionWithDefaults() *AttributeSuggestion {
	this := AttributeSuggestion{}
	return &this
}

// GetSuggestions returns the Suggestions field value if set, zero value otherwise.
func (o *AttributeSuggestion) GetSuggestions() []string {
	if o == nil || IsNil(o.Suggestions) {
		var ret []string
		return ret
	}
	return o.Suggestions
}

// GetSuggestionsOk returns a tuple with the Suggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeSuggestion) GetSuggestionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Suggestions) {
		return nil, false
	}
	return o.Suggestions, true
}

// HasSuggestions returns a boolean if a field has been set.
func (o *AttributeSuggestion) HasSuggestions() bool {
	if o != nil && !IsNil(o.Suggestions) {
		return true
	}

	return false
}

// SetSuggestions gets a reference to the given []string and assigns it to the Suggestions field.
func (o *AttributeSuggestion) SetSuggestions(v []string) {
	o.Suggestions = v
}

func (o AttributeSuggestion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttributeSuggestion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Suggestions) {
		toSerialize["suggestions"] = o.Suggestions
	}
	return toSerialize, nil
}

type NullableAttributeSuggestion struct {
	value *AttributeSuggestion
	isSet bool
}

func (v NullableAttributeSuggestion) Get() *AttributeSuggestion {
	return v.value
}

func (v *NullableAttributeSuggestion) Set(val *AttributeSuggestion) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeSuggestion) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeSuggestion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeSuggestion(val *AttributeSuggestion) *NullableAttributeSuggestion {
	return &NullableAttributeSuggestion{value: val, isSet: true}
}

func (v NullableAttributeSuggestion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeSuggestion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


