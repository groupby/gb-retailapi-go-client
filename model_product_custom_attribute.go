/*
GroupBy Retail

GroupBy Retail API

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the ProductCustomAttribute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductCustomAttribute{}

// ProductCustomAttribute A custom attribute that is not explicitly modeled in product.
type ProductCustomAttribute struct {
	// The textual values of this custom attribute. At most 400 values are allowed. Empty values are not allowed. Length limit of 256 characters. Exactly one of text or numbers should be set.
	Text []string `json:"text,omitempty"`
	// The numerical values of this custom attribute. At most 400 values are allowed. Exactly one of text or numbers should be set.
	Numbers []float64 `json:"numbers,omitempty"`
	// If true, custom attribute values are searchable by text queries in. search. Only set if type text set.
	Searchable *bool `json:"searchable,omitempty"`
	// If true, custom attribute values are indexed, so that it can be filtered, faceted or boosted in search.
	Indexable *bool `json:"indexable,omitempty"`
}

// NewProductCustomAttribute instantiates a new ProductCustomAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductCustomAttribute() *ProductCustomAttribute {
	this := ProductCustomAttribute{}
	return &this
}

// NewProductCustomAttributeWithDefaults instantiates a new ProductCustomAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductCustomAttributeWithDefaults() *ProductCustomAttribute {
	this := ProductCustomAttribute{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ProductCustomAttribute) GetText() []string {
	if o == nil || IsNil(o.Text) {
		var ret []string
		return ret
	}
	return o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCustomAttribute) GetTextOk() ([]string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ProductCustomAttribute) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given []string and assigns it to the Text field.
func (o *ProductCustomAttribute) SetText(v []string) {
	o.Text = v
}

// GetNumbers returns the Numbers field value if set, zero value otherwise.
func (o *ProductCustomAttribute) GetNumbers() []float64 {
	if o == nil || IsNil(o.Numbers) {
		var ret []float64
		return ret
	}
	return o.Numbers
}

// GetNumbersOk returns a tuple with the Numbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCustomAttribute) GetNumbersOk() ([]float64, bool) {
	if o == nil || IsNil(o.Numbers) {
		return nil, false
	}
	return o.Numbers, true
}

// HasNumbers returns a boolean if a field has been set.
func (o *ProductCustomAttribute) HasNumbers() bool {
	if o != nil && !IsNil(o.Numbers) {
		return true
	}

	return false
}

// SetNumbers gets a reference to the given []float64 and assigns it to the Numbers field.
func (o *ProductCustomAttribute) SetNumbers(v []float64) {
	o.Numbers = v
}

// GetSearchable returns the Searchable field value if set, zero value otherwise.
func (o *ProductCustomAttribute) GetSearchable() bool {
	if o == nil || IsNil(o.Searchable) {
		var ret bool
		return ret
	}
	return *o.Searchable
}

// GetSearchableOk returns a tuple with the Searchable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCustomAttribute) GetSearchableOk() (*bool, bool) {
	if o == nil || IsNil(o.Searchable) {
		return nil, false
	}
	return o.Searchable, true
}

// HasSearchable returns a boolean if a field has been set.
func (o *ProductCustomAttribute) HasSearchable() bool {
	if o != nil && !IsNil(o.Searchable) {
		return true
	}

	return false
}

// SetSearchable gets a reference to the given bool and assigns it to the Searchable field.
func (o *ProductCustomAttribute) SetSearchable(v bool) {
	o.Searchable = &v
}

// GetIndexable returns the Indexable field value if set, zero value otherwise.
func (o *ProductCustomAttribute) GetIndexable() bool {
	if o == nil || IsNil(o.Indexable) {
		var ret bool
		return ret
	}
	return *o.Indexable
}

// GetIndexableOk returns a tuple with the Indexable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductCustomAttribute) GetIndexableOk() (*bool, bool) {
	if o == nil || IsNil(o.Indexable) {
		return nil, false
	}
	return o.Indexable, true
}

// HasIndexable returns a boolean if a field has been set.
func (o *ProductCustomAttribute) HasIndexable() bool {
	if o != nil && !IsNil(o.Indexable) {
		return true
	}

	return false
}

// SetIndexable gets a reference to the given bool and assigns it to the Indexable field.
func (o *ProductCustomAttribute) SetIndexable(v bool) {
	o.Indexable = &v
}

func (o ProductCustomAttribute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductCustomAttribute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Numbers) {
		toSerialize["numbers"] = o.Numbers
	}
	if !IsNil(o.Searchable) {
		toSerialize["searchable"] = o.Searchable
	}
	if !IsNil(o.Indexable) {
		toSerialize["indexable"] = o.Indexable
	}
	return toSerialize, nil
}

type NullableProductCustomAttribute struct {
	value *ProductCustomAttribute
	isSet bool
}

func (v NullableProductCustomAttribute) Get() *ProductCustomAttribute {
	return v.value
}

func (v *NullableProductCustomAttribute) Set(val *ProductCustomAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableProductCustomAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableProductCustomAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductCustomAttribute(val *ProductCustomAttribute) *NullableProductCustomAttribute {
	return &NullableProductCustomAttribute{value: val, isSet: true}
}

func (v NullableProductCustomAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductCustomAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


