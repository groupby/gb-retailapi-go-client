/*
GroupBy Retail

GroupBy Retail API

API version: 0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gbretailapi

import (
	"encoding/json"
)

// checks if the SelectedRefinementTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelectedRefinementTrigger{}

// SelectedRefinementTrigger struct for SelectedRefinementTrigger
type SelectedRefinementTrigger struct {
	Field string `json:"field"`
	Value string `json:"value"`
	Range Range `json:"range"`
	Type SelectedRefinementTriggerType `json:"type"`
}

// NewSelectedRefinementTrigger instantiates a new SelectedRefinementTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectedRefinementTrigger(field string, value string, range_ Range, type_ SelectedRefinementTriggerType) *SelectedRefinementTrigger {
	this := SelectedRefinementTrigger{}
	this.Field = field
	this.Value = value
	this.Range = range_
	this.Type = type_
	return &this
}

// NewSelectedRefinementTriggerWithDefaults instantiates a new SelectedRefinementTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectedRefinementTriggerWithDefaults() *SelectedRefinementTrigger {
	this := SelectedRefinementTrigger{}
	return &this
}

// GetField returns the Field field value
func (o *SelectedRefinementTrigger) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *SelectedRefinementTrigger) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *SelectedRefinementTrigger) SetField(v string) {
	o.Field = v
}

// GetValue returns the Value field value
func (o *SelectedRefinementTrigger) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SelectedRefinementTrigger) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SelectedRefinementTrigger) SetValue(v string) {
	o.Value = v
}

// GetRange returns the Range field value
func (o *SelectedRefinementTrigger) GetRange() Range {
	if o == nil {
		var ret Range
		return ret
	}

	return o.Range
}

// GetRangeOk returns a tuple with the Range field value
// and a boolean to check if the value has been set.
func (o *SelectedRefinementTrigger) GetRangeOk() (*Range, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Range, true
}

// SetRange sets field value
func (o *SelectedRefinementTrigger) SetRange(v Range) {
	o.Range = v
}

// GetType returns the Type field value
func (o *SelectedRefinementTrigger) GetType() SelectedRefinementTriggerType {
	if o == nil {
		var ret SelectedRefinementTriggerType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SelectedRefinementTrigger) GetTypeOk() (*SelectedRefinementTriggerType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SelectedRefinementTrigger) SetType(v SelectedRefinementTriggerType) {
	o.Type = v
}

func (o SelectedRefinementTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelectedRefinementTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	toSerialize["value"] = o.Value
	toSerialize["range"] = o.Range
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableSelectedRefinementTrigger struct {
	value *SelectedRefinementTrigger
	isSet bool
}

func (v NullableSelectedRefinementTrigger) Get() *SelectedRefinementTrigger {
	return v.value
}

func (v *NullableSelectedRefinementTrigger) Set(val *SelectedRefinementTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectedRefinementTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectedRefinementTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectedRefinementTrigger(val *SelectedRefinementTrigger) *NullableSelectedRefinementTrigger {
	return &NullableSelectedRefinementTrigger{value: val, isSet: true}
}

func (v NullableSelectedRefinementTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectedRefinementTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


